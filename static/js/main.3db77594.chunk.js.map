{"version":3,"sources":["components/FileDropper/FileDropper.jsx","components/PresentationForm/PresentationForm.jsx","web.js","components/Slide/Slide.jsx","components/PresentationSlider/PresentationSlider.jsx","components/Thumbnail/Thumbnail.jsx","components/ThumbnailDrawer/ThumbnailDrawer.jsx","components/Presentation/Presentation.jsx","components/PresentationWrapper/PresentationWrapper.jsx","components/PresentationRow/PresentationRow.jsx","components/PresentationTable/PresentationTable.jsx","components/Home/Home.jsx","components/Navigation/Navigations.jsx","App.js","serviceWorker.js","index.js"],"names":["FileDropper","state","files","handleDrop","event","temp2","Array","from","map","a","name","setState","console","log","props","filesDropped","id","FileDrop","onDrop","this","style","fileBoxStyle","fileName","fileBlockStyle","key","Component","background","marginBotom","marginTop","maxHeight","overflow","PresentationForm","presName","numSlides","powerpointOnlineLink","presImageFiles","progressBarValue","presInfoUploaded","input","numSlidesInput","powerpointOnlineLinkInput","uploadSlideImages","forEach","e","file","presentationName","firebase","ref","child","put","on","snapshot","progress","bytesTransferred","totalBytes","newState","Object","assign","document","getElementById","display","error","uploadPresentationDetails","presDetails","powerPointLink","pres","collection","add","link","web","then","handleSubmit","preventDefault","value","temp","formContainer","Alert","variant","alertStyle","onSubmit","type","textInputStyle","filedropperContainerStyle","ProgressBar","animated","now","label","parseInt","width","padding","Slide","src","imageSource","alt","height","PresentationSlider","activeIndex","handleOnSelect","handleControlClick","oldProps","newProps","Carousel","indicators","interval","onSelect","slideSources","val","Item","Thumbnail","handleClick","bind","onClick","propTypes","PropTypes","string","func","ThumbnailDrawer","handleThumbnailClick","onThumbnailClick","containerStyle","thumbnailStyle","backgroundColor","textAlign","Presentation","activeSlideIndex","index","v","indexOf","contStyle","headerStyle","growStyle","currentSlideStyle","grid","className","gridTemplateColumns","flexGrow","marginRight","PresentationWrapper","loaded","downlaodCount","slideNumber","match","params","count","i","getDownloadURL","url","unsorted","sort","b","length","PresentationRow","presLink","rowStyle","nameStyle","fillStyle","to","viewButtonStyle","marginBottom","fontSize","fontWeight","border","PresentationTable","presentations","Home","presentationDetails","loading","get","data","docs","doc","Navigations","navStyle","buttonStyle","marginLeft","App","exact","path","component","Boolean","window","location","hostname","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3db77594.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport FileDrop from 'react-file-drop';\r\nimport PropTypes from 'prop-types';\r\nimport './FileDropper.css'\r\n\r\n\r\nexport default class FileDropper extends Component {\r\n\r\n  state = {\r\n    files: []\r\n  }\r\n\r\n  handleDrop = (files, event) => {\r\n    let temp = Array.from(files);\r\n    let temp2 = temp.map(a => a.name);\r\n    this.setState({\r\n      files: temp2\r\n    }, () => {\r\n      console.log(this.state);\r\n    })\r\n    this.props.filesDropped(files);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h4>Drag your slide images here</h4>\r\n        <div id=\"react-file-drop-demo\">\r\n          <FileDrop onDrop={this.handleDrop}>\r\n            Drag your slide GIF's here!\r\n          </FileDrop>\r\n          <div style={fileBoxStyle}>\r\n            {\r\n              this.state.files.map((fileName) => (\r\n                <p style={fileBlockStyle} key={fileName}>{fileName}</p>\r\n              ))\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nFileDropper.propTypes = {\r\n  filesDropped: PropTypes.func\r\n}\r\n\r\nconst fileBlockStyle = {\r\n  background: 'lightgray',\r\n  marginBotom: '0 !important',\r\n  marginTop: 10\r\n}\r\n\r\nconst fileBoxStyle = {\r\n  maxHeight: 100,\r\n  overflow: 'scroll'\r\n}","import React, { Component } from 'react'\r\nimport FileDropper from '../FileDropper/FileDropper'\r\nimport * as web from '../../web';\r\nimport { ProgressBar, Alert } from 'react-bootstrap';\r\n\r\nexport default class PresentationForm extends Component {\r\n\r\n  state = {\r\n    presName: '',\r\n    numSlides: 0,\r\n    powerpointOnlineLink: '',\r\n    presImageFiles: [],\r\n    progressBarValue: 0,\r\n    presInfoUploaded: false\r\n  }\r\n\r\n  input = '';\r\n  numSlidesInput = 0;\r\n  powerpointOnlineLinkInput = '';\r\n\r\n  uploadSlideImages = () => {\r\n    this.state.presImageFiles.forEach((e) => {\r\n      let uploadTask = web.uploadFile(e, this.state.presName);\r\n      uploadTask.on('state_changed', (snapshot) => {\r\n        console.log('state changed');\r\n        let progress = ((snapshot.bytesTransferred / snapshot.totalBytes) * 100) / this.state.numSlides;\r\n        let newState = Object.assign({}, this.state);\r\n        newState.progressBarValue = this.state.progressBarValue + progress;\r\n        this.setState(newState);\r\n        if (this.state.progressBarValue > 100 && this.state.presInfoUploaded) {\r\n          document.getElementById('alert').style.display = 'block';\r\n        }\r\n        console.log(this.state.progressBarValue);\r\n      }, (error) => {\r\n        console.log('could not upload files');\r\n      })\r\n    })\r\n  }\r\n\r\n  uploadPresentationDetails = () => {\r\n    let presDetails = {\r\n      presName: this.state.presName,\r\n      numSlides: this.state.numSlides,\r\n      powerPointLink: this.state.powerpointOnlineLink\r\n    }\r\n\r\n    console.log(presDetails);\r\n\r\n    web.uploadPresentationDetails(presDetails).then(() => {\r\n      console.log('Presentation Details Uploaded');\r\n      let newState = Object.assign({}, this.state);\r\n      newState.presInfoUploaded = true;\r\n      this.setState(newState);\r\n      if (this.state.progressBarValue > 100 && this.state.presInfoUploaded) {\r\n        document.getElementById('alert').style.display = 'block';\r\n      }\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.input.value === '' || this.numSlidesInput.value === 0 || this.powerpointOnlineLinkInput.value === '') {\r\n      console.log('We must block this');\r\n      return;\r\n    }\r\n    console.log('Form has been submitted');\r\n    this.setState({\r\n      presName: this.input.value,\r\n      numSlides: this.numSlidesInput.value,\r\n      powerpointOnlineLink: this.powerpointOnlineLinkInput.value\r\n    }, () => {\r\n      this.uploadSlideImages();\r\n      this.uploadPresentationDetails();\r\n    })\r\n  }\r\n\r\n  filesDropped = (files) => {\r\n    let temp = Array.from(files);\r\n    this.setState({\r\n      presName: this.state.presName,\r\n      presImageFiles: temp\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={formContainer} id=\"main\">\r\n        <Alert id=\"alert\" variant=\"info\" style={alertStyle}>Presentation Uploaded</Alert>\r\n        <h2>Upload a new presentation</h2>\r\n        <form onSubmit={this.handleSubmit}>\r\n\r\n          <p>Presentation Name:</p>\r\n          <input type=\"text\" ref={(input) => this.input = input} style={textInputStyle} />\r\n\r\n          <p>Number of slides:</p>\r\n          <input type=\"number\" ref={(input) => this.numSlidesInput = input} style={textInputStyle} />\r\n\r\n          <p>Link to Powerpoint Online</p>\r\n          <input type=\"text\" ref={(input) => this.powerpointOnlineLinkInput = input} style={textInputStyle} />\r\n\r\n          <div style={filedropperContainerStyle}>\r\n            <FileDropper filesDropped={this.filesDropped} />\r\n          </div>\r\n          <ProgressBar animated now={this.state.progressBarValue} label={`${parseInt(this.state.progressBarValue)}%`} />\r\n          <input type=\"submit\" value=\"Submit\" />\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst textInputStyle = {\r\n  width: '100%',\r\n  padding: '10 20'\r\n}\r\n\r\nconst filedropperContainerStyle = {\r\n  width: '100%',\r\n  marginTop: 10\r\n}\r\n\r\nconst formContainer = {\r\n  padding: '0 100px'\r\n}\r\n\r\nconst alertStyle = {\r\n  display: 'none'\r\n}","import * as firebase from 'firebase';\r\n\r\nexport function uploadFile(file, presentationName) {\r\n  var storageRef = firebase.storage().ref();\r\n  var presentationRef = storageRef.child(`${presentationName}/` + file.name);\r\n  return presentationRef.put(file);\r\n}\r\n\r\nexport function uploadPresentationDetails(pres) {\r\n  const { presName, numSlides, powerPointLink } = pres;\r\n  let db = firebase.firestore();\r\n  return db.collection('presentations').add({\r\n    name: presName,\r\n    numSlides: numSlides,\r\n    link: powerPointLink\r\n  });\r\n}\r\n\r\nexport function getDownloadUrlForSlide(slideNumber, presentationName) {\r\n  var storageRef = firebase.storage().ref();\r\n  var presentationRef = storageRef.child(`${presentationName}`);\r\n  return presentationRef.child(`Slide${slideNumber}.GIF`).getDownloadURL();\r\n}\r\n\r\nexport function getAllPresentations() {\r\n    let db = firebase.firestore();\r\n    return db.collection('presentations').get();\r\n}","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class Slide extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <img src={this.props.imageSource} alt=\"Slide\" height=\"490\" width=\"653\"></img>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nSlide.propTypes = {\r\n    imageSource: PropTypes.string\r\n};\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Carousel } from 'react-bootstrap'\r\nimport Slide from '../Slide/Slide'\r\n\r\n\r\nexport default class PresentationSlider extends Component {\r\n\r\n  state = {\r\n    activeIndex: 0\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      activeIndex: this.props.activeIndex\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(oldProps) {\r\n    const newProps = this.props\r\n    if (oldProps.activeIndex !== newProps.activeIndex) {\r\n      this.setState({\r\n        activeIndex: this.props.activeIndex\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  handleOnSelect = (e) => {\r\n    this.setState({\r\n      activeIndex: e\r\n    }, () => {\r\n        this.props.handleControlClick(e);\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Carousel style={style} indicators={false} interval={null} activeIndex={this.state.activeIndex}\r\n        onSelect={this.handleOnSelect}>\r\n        {\r\n          this.props.slideSources.map(val => (\r\n              <Carousel.Item key={val.key}><Slide imageSource={val.value} /></Carousel.Item>\r\n          ))\r\n        }\r\n      </Carousel>\r\n    )\r\n  }\r\n}\r\n\r\nPresentationSlider.propTypes = {\r\n  slideSources: PropTypes.arrayOf(PropTypes.object),\r\n  activeIndex: PropTypes.number,\r\n  handleControlClick: PropTypes.func.isRequired\r\n}\r\n\r\nconst style = {\r\n  padding: '0px 30px',\r\n  height: '85%'\r\n}","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Slide from '../Slide/Slide'\r\n\r\nexport default class Thumbnail extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.props.handleClick(this.props.imageSource)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <img onClick={this.handleClick} src={this.props.imageSource} alt=\"Slide\" height=\"90\" width=\"120\"></img>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nSlide.propTypes = {\r\n  imageSource: PropTypes.string,\r\n  handleClick: PropTypes.func\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Thumbnail from '../Thumbnail/Thumbnail'\r\n\r\nexport default class ThumbnailDrawer extends Component {\r\n\r\n  handleThumbnailClick = (val) => {\r\n    this.props.onThumbnailClick(val);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={containerStyle}>\r\n        {\r\n          this.props.slideSources.map(val => (\r\n            <div style={thumbnailStyle}>\r\n              <Thumbnail key={val.key} imageSource={val.value} handleClick={this.handleThumbnailClick} /> \r\n            </div>\r\n          ))\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nThumbnailDrawer.propTypes = {\r\n  slideSources: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onThumbnailClick: PropTypes.func\r\n}\r\n\r\nconst thumbnailStyle = {\r\n  backgroundColor: 'darkgray',\r\n  padding: '10px 10px',\r\n  textAlign: 'center'\r\n}\r\n\r\nconst containerStyle = {\r\n  height: '80vh',\r\n  overflow: 'scroll'\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport PresentationSlider from '../PresentationSlider/PresentationSlider'\r\nimport ThumbnailDrawer from '../ThumbnailDrawer/ThumbnailDrawer';\r\n\r\n\r\nexport default class Presentation extends Component {\r\n\r\n    state = {\r\n        activeSlideIndex: 0\r\n    }\r\n          \r\n    handleThumbnailClick = (val) => {\r\n        let temp = this.props.slideSources.map(v => v.value);\r\n        let index = temp.indexOf(val);\r\n        console.log(index);\r\n        this.setState({\r\n            activeSlideIndex: index\r\n        });\r\n    }\r\n\r\n    handleControlClick = (val) => {\r\n        this.setState({\r\n            activeSlideIndex: val\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={contStyle}>\r\n                <div style={headerStyle}>\r\n                    <h1>{this.props.presentationName}</h1>\r\n                    <div style={growStyle}></div>\r\n                    <p style={currentSlideStyle}><strong>Current Slide:</strong> {this.state.activeSlideIndex + 1}</p>\r\n                </div>\r\n                <div style={grid}>\r\n                    <ThumbnailDrawer slideSources={this.props.slideSources} onThumbnailClick={this.handleThumbnailClick} />\r\n                    <div className=\"container\" style={containerStyle}>\r\n                        <PresentationSlider slideSources={this.props.slideSources} \r\n                        activeIndex={this.state.activeSlideIndex}\r\n                        handleControlClick={this.handleControlClick}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nPresentation.propTypes = {\r\n    presentationName: PropTypes.string,\r\n    slideSources: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nconst containerStyle = {\r\n    backgroundColor: 'lightgray',\r\n    padding: '40px 30px',\r\n    textAlign: 'center',\r\n\r\n\r\n}\r\n\r\nconst grid = {\r\n    display: 'grid',\r\n    gridTemplateColumns: '15% 80%',\r\n}\r\n\r\nconst contStyle = {\r\n    height: '90vh',\r\n    overflow: 'hidden'\r\n}\r\n\r\nconst headerStyle = {\r\n    display: 'flex'\r\n}\r\n\r\nconst growStyle = {\r\n    flexGrow: 1\r\n}\r\n\r\nconst currentSlideStyle = {\r\n    marginRight: '100px'\r\n}","import React, { Component } from 'react'\r\nimport Presentation from '../Presentation/Presentation'\r\nimport * as web from '../../web';\r\nexport default class PresentationWrapper extends Component {\r\n\r\n    state = {\r\n        loaded: false,\r\n        slideSources: []\r\n    }\r\n    downlaodCount = 0;\r\n\r\n    componentDidMount() {\r\n        const { name, count } = this.props.match.params;\r\n        for (var i = 1; i <= count; i++) {\r\n            web.getDownloadUrlForSlide(i, name).then((url) => {\r\n                this.downlaodCount++;\r\n                if (this.downlaodCount === +count) {\r\n                    let unsorted = [...this.state.slideSources, {key: url, value: url}];\r\n                    unsorted.sort((a, b) => {\r\n                       // return (a.value < b.value) ? -1 : 1\r\n                       if (a.value.length === b.value.length) {\r\n                            return (a.value < b.value) ? -1 : 1;\r\n                       } else if (a.value.length < b.value.length){\r\n                            return -1;\r\n                       } else {\r\n                            return 1;\r\n                       }\r\n                    })\r\n\r\n                    console.log(unsorted);\r\n                    this.setState({\r\n                        loaded: true,\r\n                        slideSources: unsorted\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        loaded: false,\r\n                        slideSources: [...this.state.slideSources, {key: url, value: url}]\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loaded) {\r\n            return (\r\n                <div>\r\n                    <Presentation presentationName={this.props.match.params.name} slideSources={this.state.slideSources} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <h4>Loading</h4>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class PresentationRow extends Component {\r\n  render() {\r\n    const presLink = `pres/${this.props.pres.name}/${this.props.pres.numSlides}`;\r\n    return (\r\n      <div style={rowStyle}>\r\n        <div>\r\n          <p style={nameStyle}>{this.props.pres.name}</p>\r\n          <p>Number of Slides: {this.props.pres.numSlides}</p>\r\n        </div>\r\n        <div style={fillStyle}></div>\r\n        <Link to={presLink}>\r\n          <button style={viewButtonStyle}>\r\n            View\r\n          </button>\r\n        </Link>\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nPresentationRow.propTypes = {\r\n  pres: PropTypes.object.isRequired\r\n}\r\n\r\nconst rowStyle = {\r\n  padding: '10px 20px',\r\n  backgroundColor: 'lightgray',\r\n  marginBottom: 5,\r\n  display: 'flex'\r\n}\r\n\r\nconst nameStyle = {\r\n  fontSize: '14pt',\r\n  fontWeight: 600\r\n}\r\n\r\nconst viewButtonStyle = {\r\n  width: 100,\r\n  height: '100%',\r\n  border: 'none'\r\n}\r\n\r\nconst fillStyle = {\r\n  flexGrow: 1\r\n}","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport PresentationRow from '../PresentationRow/PresentationRow';\r\n\r\nexport default class PresentationTable extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.presentations.forEach((pres) => {\r\n      console.log(pres)\r\n    })\r\n    console.log(this.props.presentations.length);\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.presentations.length);  \r\n    return (\r\n      <div>\r\n        <h4>Presentations</h4>\r\n        {\r\n          this.props.presentations.map((pres) => (\r\n            <PresentationRow pres={pres} key={pres.name}/>\r\n          ))\r\n        }\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nPresentationTable.propTypes = {\r\n  presentations: PropTypes.arrayOf(PropTypes.object).isRequired\r\n}\r\n","import React, { Component } from 'react'\r\nimport * as web from '../../web'\r\nimport PresentationTable from '../PresentationTable/PresentationTable'\r\n\r\nexport default class Home extends Component {\r\n  state = {\r\n    presentationDetails: [],\r\n    loading: true\r\n  }\r\n\r\n  componentDidMount() {\r\n    web.getAllPresentations().then((data) => {\r\n      data.docs.forEach(doc => {\r\n        this.setState({\r\n          presentationDetails: [...this.state.presentationDetails, doc.data()]\r\n        })\r\n      })\r\n      this.setState({\r\n        loading: false\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    if (this.state.loading) {\r\n      return <h1>Loading</h1>\r\n    } else {\r\n      return (\r\n        <div>\r\n          <PresentationTable presentations={this.state.presentationDetails} />\r\n        </div>\r\n      )\r\n    }\r\n    \r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class Navigations extends Component {\r\n  render() {\r\n    return (\r\n      <div style={navStyle}>\r\n        <h4 style={headerStyle}>Presentation Viewer</h4>\r\n        <div style={fillStyle}></div>\r\n        <Link to=\"/\">\r\n          <button style={buttonStyle}>Home</button>\r\n        </Link>\r\n        <Link to=\"/presentation/upload\">\r\n          <button style={buttonStyle}>Add Presentation</button>\r\n        </Link>     \r\n         </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst navStyle = {\r\n  height: '35px',\r\n  backgroundColor: 'lightgray',\r\n  display: 'flex'\r\n}\r\n\r\nconst headerStyle = {\r\n  marginLeft: '10px'\r\n}\r\n\r\nconst fillStyle = {\r\n  flexGrow: 1\r\n}\r\n\r\nconst buttonStyle = {\r\n  height: '100%',\r\n  border: 'none'\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport PresentationForm from './components/PresentationForm/PresentationForm';\nimport PresentationWrapper from './components/PresentationWrapper/PresentationWrapper';\nimport Home from './components/Home/Home';\nimport Navigations from './components/Navigation/Navigations';\n\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Navigations />\n        <div className=\"App\">\n\n          <Route exact path=\"/pres/:name/:count\" component={PresentationWrapper} />\n          <Route exact path=\"/presentation/upload\">\n            <PresentationForm />\n          </Route>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n        </div>\n      </div>\n    </Router>\n\n\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// Firebase App (the core Firebase SDK) is always required and\n// must be listed before other Firebase SDKs\nimport * as firebase from \"firebase/app\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBVfZqEIHf0_Z8iit9HC18Oi85odEWENYA\",\n    authDomain: \"pres-demo.firebaseapp.com\",\n    databaseURL: \"https://pres-demo.firebaseio.com\",\n    projectId: \"pres-demo\",\n    storageBucket: \"pres-demo.appspot.com\",\n    messagingSenderId: \"31490714950\",\n    appId: \"1:31490714950:web:72fcee3ba4ff4517a2c947\",\n    measurementId: \"G-1TBQ4ZPXM1\"\n};\n\nconsole.log('In index');\n\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}